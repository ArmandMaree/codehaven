events {}

http {
  upstream frontend {
    least_conn;
    server frontend:3000 max_fails=3 fail_timeout=30s;
  }

  upstream backend {
    least_conn;
    server backend:3001 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      break;
    }

    location ~ /api/(?<url>.*) {
      proxy_pass http://backend/$url$is_args$query_string;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    location ~* \.(eot|otf|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }
  }
}

# server {
#   listen 80;

#   location / {
#       proxy_pass http://frontend;
#   }

#   location /sockjs-node {
#       proxy_pass http://frontend;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "Upgrade";
#   }
  
#   location /api {
#       rewrite /api/(.*) /$1 break;
#       proxy_pass http://backend;
#   }
# }